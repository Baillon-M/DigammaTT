{-# OPTIONS --without-K --safe #-}

open import Definition.Typed.EqualityRelation

module Definition.LogicalRelation.Properties.Conversion {{eqrel : EqRelSet}} where
open EqRelSet {{...}}

open import Definition.Untyped hiding (_‚à∑_)
open import Definition.Typed
open import Definition.Typed.RedSteps
open import Definition.Typed.Properties
import Definition.Typed.Weakening as Wk
open import Definition.LogicalRelation
open import Definition.LogicalRelation.Properties.Escape
open import Definition.LogicalRelation.ShapeView
-- open import Definition.LogicalRelation.Irrelevance

open import Tools.Nat
open import Tools.Product
import Tools.PropositionalEquality as PE

private
  variable
    n : Nat
    Œì : Con Term n
    l : LCon
    lŒµ : ‚ä¢‚Çó l

-- Conversion of syntactic reduction closures.
convRed:*: : ‚àÄ {t u A B} ‚Üí Œì / lŒµ ‚ä¢ t :‚áí*: u ‚à∑ A ‚Üí Œì / lŒµ ‚ä¢ A ‚â° B ‚Üí Œì / lŒµ ‚ä¢ t :‚áí*: u ‚à∑ B
convRed:*: [ ‚ä¢t , ‚ä¢u , d ] A‚â°B = [ conv ‚ä¢t  A‚â°B , conv ‚ä¢u  A‚â°B , conv* d  A‚â°B ]

  -- Irrelevance for type equality with propositionally equal second types
irrelevanceEqR‚Ä≤ : ‚àÄ {A B B‚Ä≤ k} (eqB : B PE.‚â° B‚Ä≤) (p : Œì / lŒµ ‚ä©‚ü® k ‚ü© A)
                ‚Üí Œì / lŒµ ‚ä©‚ü® k ‚ü© A ‚â° B / p ‚Üí Œì / lŒµ ‚ä©‚ü® k ‚ü© A ‚â° B‚Ä≤ / p
irrelevanceEqR‚Ä≤ PE.refl p A‚â°B = A‚â°B


mutual

  -- Helper function for conversion of terms converting from left to right.
  convTermT‚ÇÅ : ‚àÄ {k k‚Ä≤ A B t} {[A] : Œì / lŒµ ‚ä©‚ü® k ‚ü© A} {[B] : Œì / lŒµ ‚ä©‚ü® k‚Ä≤ ‚ü© B}
             ‚Üí ShapeView Œì k k‚Ä≤ A B [A] [B]
             ‚Üí (A‚â°B : Œì / lŒµ ‚ä©‚ü® k ‚ü©  A ‚â° B / [A])
             ‚Üí Œì / lŒµ ‚ä©‚ü® k ‚ü©  t ‚à∑ A / [A]
             ‚Üí Œì / lŒµ ‚ä©‚ü® k‚Ä≤ ‚ü© t ‚à∑ B / [B]
  convTermT‚ÇÅ (‚Ñï·µ• D D‚Ä≤) A‚â°B t = t
  convTermT‚ÇÅ (ùîπ·µ• D D‚Ä≤) A‚â°B t = t
  -- convTermT‚ÇÅ (Empty·µ• D D‚Ä≤) A‚â°B t = t
  -- convTermT‚ÇÅ (Unit·µ• D D‚Ä≤) A‚â°B t = t
  convTermT‚ÇÅ (ne (ne K D neK K‚â°K) (ne K‚ÇÅ D‚ÇÅ neK‚ÇÅ K‚â°K‚ÇÅ)) (ne‚Çå M D‚Ä≤ neM K‚â°M)
             (ne‚Çú k d (neNf‚Çú neK‚ÇÇ ‚ä¢k k‚â°k))
             with whrDet* (red D‚Ä≤ , ne neM) (red D‚ÇÅ , ne neK‚ÇÅ)
  convTermT‚ÇÅ (ne (ne K D neK K‚â°K) (ne K‚ÇÅ D‚ÇÅ neK‚ÇÅ K‚â°K‚ÇÅ)) (ne‚Çå M D‚Ä≤ neM K‚â°M)
             (ne‚Çú k d (neNf‚Çú neK‚ÇÇ ‚ä¢k k‚â°k))
             | PE.refl =
             ne‚Çú k (convRed:*: d (‚âÖ-eq (~-to-‚âÖ K‚â°M)))
               (neNf‚Çú neK‚ÇÇ (conv ‚ä¢k (‚âÖ-eq (~-to-‚âÖ K‚â°M))) (~-conv k‚â°k (‚âÖ-eq (~-to-‚âÖ K‚â°M))))
  convTermT‚ÇÅ {Œì = Œì} {lŒµ = lŒµ} (B·µ• BŒ† (B·µ£ F G D ‚ä¢F ‚ä¢G A‚â°A [F‚Çô] [F] [G] G-ext)
                                      (B·µ£ F‚ÇÅ G‚ÇÅ D‚ÇÅ ‚ä¢F‚ÇÅ ‚ä¢G‚ÇÅ A‚â°A‚ÇÅ [F‚Çô]‚ÇÅ [F]‚ÇÅ [G]‚ÇÅ G-ext‚ÇÅ))
                                (B‚Çå F‚Ä≤ G‚Ä≤ D‚Ä≤ A‚â°B [F‚â°F‚Çô] [F‚â°F‚Ä≤] [G‚â°G‚Ä≤])
             (Œ†‚Çú ‚ä¢f f‚â°f N [f] N‚ÇÅ [f]‚ÇÅ) =
    let Œ†F‚ÇÅG‚ÇÅ‚â°Œ†F‚Ä≤G‚Ä≤   = whrDet* (red D‚ÇÅ , Œ†‚Çô) (D‚Ä≤ , Œ†‚Çô)
        F‚ÇÅ‚â°F‚Ä≤ , G‚ÇÅ‚â°G‚Ä≤ = B-PE-injectivity BŒ† Œ†F‚ÇÅG‚ÇÅ‚â°Œ†F‚Ä≤G‚Ä≤
        Œ†FG‚â°Œ†F‚ÇÅG‚ÇÅ = PE.subst (Œª x ‚Üí Œì  / lŒµ ‚ä¢ Œ† F ‚ñπ G ‚â° x) (PE.sym Œ†F‚ÇÅG‚ÇÅ‚â°Œ†F‚Ä≤G‚Ä≤)
                             (‚âÖ-eq A‚â°B)
        Nmax = max N (max [F‚â°F‚Çô] [F‚Çô])
        Nmax‚ÇÅ = max N‚ÇÅ (max [F‚â°F‚Çô] [F‚Çô])
    in  Œ†‚Çú (conv ‚ä¢f Œ†FG‚â°Œ†F‚ÇÅG‚ÇÅ) (‚âÖ-conv f‚â°f Œ†FG‚â°Œ†F‚ÇÅG‚ÇÅ) Nmax
           (Œª {m} {œÅ} {Œî} {a} {b} [œÅ] ‚â§Œµ lŒµ' N<s N<s' ‚ä¢Œî [a] [b] a‚â°b ‚Üí
              let F‚Çô<s = ‚â§-trans (‚â§-trans (MaxLess-r _ _) (MaxLess-r N _)) N<s'
                  F‚â°F‚Çô<s = ‚â§-trans (‚â§-trans (MaxLess-l _ _) (MaxLess-r N _)) N<s'
                  [F‚â°F‚ÇÅ] = irrelevanceEqR‚Ä≤ (PE.cong (wk œÅ) (PE.sym F‚ÇÅ‚â°F‚Ä≤))
                                           ([F] [œÅ] ‚â§Œµ lŒµ' F‚Çô<s ‚ä¢Œî)
                                           ([F‚â°F‚Ä≤] [œÅ] ‚â§Œµ lŒµ' F‚Çô<s F‚â°F‚Çô<s ‚ä¢Œî)
                  [a]‚ÇÅ = convTerm‚ÇÇ ([F] [œÅ] ‚â§Œµ lŒµ' F‚Çô<s ‚ä¢Œî)
                                   ([F]‚ÇÅ [œÅ] ‚â§Œµ lŒµ' N<s ‚ä¢Œî) [F‚â°F‚ÇÅ] [a]
                  [b]‚ÇÅ = convTerm‚ÇÇ ([F] [œÅ] ‚â§Œµ lŒµ' F‚Çô<s ‚ä¢Œî)
                                   ([F]‚ÇÅ [œÅ] ‚â§Œµ lŒµ' N<s ‚ä¢Œî) [F‚â°F‚ÇÅ] [b]
                  a‚â°b‚ÇÅ = convEqTerm‚ÇÇ ([F] [œÅ] ‚â§Œµ lŒµ' F‚Çô<s ‚ä¢Œî)
                                     ([F]‚ÇÅ [œÅ] ‚â§Œµ lŒµ' N<s ‚ä¢Œî) [F‚â°F‚ÇÅ] a‚â°b
                  (M , [Ga]) = ([G] [œÅ] ‚â§Œµ lŒµ' F‚Çô<s ‚ä¢Œî [a]‚ÇÅ)
                  (M‚Ä≤ , [Ga]‚Ä≤) = [G]‚ÇÅ [œÅ] ‚â§Œµ lŒµ' N<s ‚ä¢Œî [a]
                  (M'' , [G‚â°Ga]) = [G‚â°G‚Ä≤] [œÅ] ‚â§Œµ lŒµ' F‚Çô<s F‚â°F‚Çô<s ‚ä¢Œî [a]‚ÇÅ
                  (K , [f‚â°fa]) = [f] [œÅ] ‚â§Œµ lŒµ' F‚Çô<s (‚â§-trans (MaxLess-l _ _) N<s') ‚ä¢Œî [a]‚ÇÅ [b]‚ÇÅ a‚â°b‚ÇÅ
                  Kmax = max K (max M M'')
              in Kmax , Œª ‚â§Œµ' lŒµ'' M<s K<s ‚Üí
                 let M<s' = ‚â§-trans (‚â§-trans (MaxLess-l _ _) (MaxLess-r K _)) K<s
                     M<s'' = ‚â§-trans (‚â§-trans (MaxLess-r M M'')(MaxLess-r K _)) K<s
                     [G‚â°G‚ÇÅ] = irrelevanceEqR‚Ä≤ (PE.cong (Œª x ‚Üí wk (lift œÅ) x [ _ ])
                                              (PE.sym G‚ÇÅ‚â°G‚Ä≤)) ([Ga] ‚â§Œµ' lŒµ'' M<s')
                                              ([G‚â°Ga] ‚â§Œµ' lŒµ'' M<s' M<s'')
                 in convEqTerm‚ÇÅ ([Ga] ‚â§Œµ' lŒµ'' M<s')
                                ([Ga]‚Ä≤ ‚â§Œµ' lŒµ'' M<s) [G‚â°G‚ÇÅ]
                                ([f‚â°fa] ‚â§Œµ' lŒµ'' M<s' (‚â§-trans (MaxLess-l _ _) K<s)))
           Nmax‚ÇÅ
           (Œª {m} {œÅ} {Œî} {a} [œÅ] ‚â§Œµ lŒµ' N<s N<s' ‚ä¢Œî [a] ‚Üí
              let F‚Çô<s = ‚â§-trans (‚â§-trans (MaxLess-r _ _) (MaxLess-r N‚ÇÅ _)) N<s'
                  F‚â°F‚Çô<s = ‚â§-trans (‚â§-trans (MaxLess-l _ _) (MaxLess-r N‚ÇÅ _)) N<s'
                  [F‚â°F‚ÇÅ] = irrelevanceEqR‚Ä≤ (PE.cong (wk œÅ) (PE.sym F‚ÇÅ‚â°F‚Ä≤))
                                           ([F] [œÅ] ‚â§Œµ lŒµ' F‚Çô<s ‚ä¢Œî)
                                           ([F‚â°F‚Ä≤] [œÅ] ‚â§Œµ lŒµ' F‚Çô<s F‚â°F‚Çô<s ‚ä¢Œî)
                  [a]‚ÇÅ = convTerm‚ÇÇ ([F] [œÅ] ‚â§Œµ lŒµ' F‚Çô<s ‚ä¢Œî)
                           ([F]‚ÇÅ [œÅ] ‚â§Œµ lŒµ' N<s ‚ä¢Œî) [F‚â°F‚ÇÅ] [a]
                  (M , [Ga]) = ([G] [œÅ] ‚â§Œµ lŒµ' F‚Çô<s ‚ä¢Œî [a]‚ÇÅ)
                  (M‚Ä≤ , [Ga]‚Ä≤) = [G]‚ÇÅ [œÅ] ‚â§Œµ lŒµ' N<s ‚ä¢Œî [a]
                  (M'' , [G‚â°Ga]) = [G‚â°G‚Ä≤] [œÅ] ‚â§Œµ lŒµ' F‚Çô<s F‚â°F‚Çô<s ‚ä¢Œî [a]‚ÇÅ
                  (K , [fa]) = [f]‚ÇÅ [œÅ] ‚â§Œµ lŒµ' F‚Çô<s (‚â§-trans (MaxLess-l _ _) N<s') ‚ä¢Œî [a]‚ÇÅ
                  Kmax = max K (max M M'')
              in Kmax , Œª ‚â§Œµ' lŒµ'' M<s K<s ‚Üí
                 let M<s' = ‚â§-trans (‚â§-trans (MaxLess-l M M'') (MaxLess-r K _)) K<s
                     M<s'' = ‚â§-trans (‚â§-trans (MaxLess-r M M'')(MaxLess-r K _)) K<s
                     [G‚â°G‚ÇÅ] = irrelevanceEqR‚Ä≤ (PE.cong (Œª x ‚Üí wk (lift œÅ) x [ _ ])
                                              (PE.sym G‚ÇÅ‚â°G‚Ä≤)) ([Ga] ‚â§Œµ' lŒµ'' M<s')
                                              ([G‚â°Ga] ‚â§Œµ' lŒµ'' M<s' M<s'')
                 in convTerm‚ÇÅ ([Ga] ‚â§Œµ' lŒµ'' M<s') ([Ga]‚Ä≤ ‚â§Œµ' lŒµ'' M<s) [G‚â°G‚ÇÅ]
                              ([fa] ‚â§Œµ' lŒµ'' M<s' (‚â§-trans (MaxLess-l _ _) K<s)))
  convTermT‚ÇÅ {Œì = Œì} {lŒµ = lŒµ} {k = k} {k‚Ä≤ = k‚Ä≤} (B·µ• BŒ£ (B·µ£ F G D ‚ä¢F ‚ä¢G A‚â°A [F‚Çô] [F] [G] G-ext)
                                                        (B·µ£ F‚ÇÅ G‚ÇÅ D‚ÇÅ ‚ä¢F‚ÇÅ ‚ä¢G‚ÇÅ A‚â°A‚ÇÅ [F‚Çô]‚ÇÅ [F]‚ÇÅ [G]‚ÇÅ G-ext‚ÇÅ))
                                                        (B‚Çå F‚Ä≤ G‚Ä≤ D‚Ä≤ A‚â°B [F‚â°F‚Çô] [F‚â°F‚Ä≤] [G‚â°G‚Ä≤])
             (Œ£‚Çú p d pProd p‚âÖp N [prop]) =
    let Œ£F‚ÇÅG‚ÇÅ‚â°Œ£F‚Ä≤G‚Ä≤   = whrDet* (red D‚ÇÅ , Œ£‚Çô) (D‚Ä≤ , Œ£‚Çô)
        F‚ÇÅ‚â°F‚Ä≤ , G‚ÇÅ‚â°G‚Ä≤ = B-PE-injectivity BŒ£ Œ£F‚ÇÅG‚ÇÅ‚â°Œ£F‚Ä≤G‚Ä≤
        Œ£FG‚â°Œ£F‚ÇÅG‚ÇÅ = PE.subst (Œª x ‚Üí Œì  / lŒµ ‚ä¢ Œ£ F ‚ñπ G ‚â° x) (PE.sym Œ£F‚ÇÅG‚ÇÅ‚â°Œ£F‚Ä≤G‚Ä≤)
                             (‚âÖ-eq A‚â°B)
        ‚ä¢Œì = wf ‚ä¢F
        Nmax = max N (max [F‚â°F‚Çô] [F‚Çô])
    in Œ£‚Çú p (convRed:*: d Œ£FG‚â°Œ£F‚ÇÅG‚ÇÅ) pProd (‚âÖ-conv p‚âÖp Œ£FG‚â°Œ£F‚ÇÅG‚ÇÅ) Nmax
       Œª ‚â§Œµ lŒµ' N<s N<s' ‚Üí
         let F‚Çô<s = ‚â§-trans (‚â§-trans (MaxLess-r _ _) (MaxLess-r N _)) N<s'
             F‚â°F‚Çô<s = ‚â§-trans (‚â§-trans (MaxLess-l _ _) (MaxLess-r N _)) N<s'
             F‚â°F‚ÇÅ = PE.subst (Œª x ‚Üí Œì / lŒµ' ‚ä©‚ü® k ‚ü© wk id F ‚â° wk id x / [F] Wk.id ‚â§Œµ lŒµ' F‚Çô<s (Con‚â§ ‚â§Œµ ‚ä¢Œì))
                             (PE.sym F‚ÇÅ‚â°F‚Ä≤)
                             ([F‚â°F‚Ä≤] Wk.id ‚â§Œµ lŒµ' F‚Çô<s F‚â°F‚Çô<s (Con‚â§ ‚â§Œµ ‚ä¢Œì))
             ([fst] , K , [snd]) = [prop] ‚â§Œµ lŒµ' F‚Çô<s (‚â§-trans (MaxLess-l _ _) N<s')
             [fst]‚ÇÅ = convTerm‚ÇÅ ([F] Wk.id ‚â§Œµ lŒµ' F‚Çô<s (Con‚â§ ‚â§Œµ ‚ä¢Œì))
                                ([F]‚ÇÅ Wk.id ‚â§Œµ lŒµ' N<s (Con‚â§ ‚â§Œµ (wf ‚ä¢F‚ÇÅ))) F‚â°F‚ÇÅ [fst]
             (M , [[G]]) = [G] Wk.id ‚â§Œµ lŒµ' F‚Çô<s (Con‚â§ ‚â§Œµ ‚ä¢Œì) [fst]
             (M' , [[G]]‚ÇÅ) = [G]‚ÇÅ Wk.id ‚â§Œµ lŒµ' N<s (Con‚â§ ‚â§Œµ (wf ‚ä¢F‚ÇÅ)) [fst]‚ÇÅ
             (M'' , [G‚â°Ga]) = [G‚â°G‚Ä≤] Wk.id ‚â§Œµ lŒµ' F‚Çô<s F‚â°F‚Çô<s (Con‚â§ ‚â§Œµ ‚ä¢Œì) [fst]
             Kmax = max K (max M M'')
         in [fst]‚ÇÅ , Kmax , Œª ‚â§Œµ' lŒµ'' M<s K<s ‚Üí
           let M<s' = ‚â§-trans (‚â§-trans (MaxLess-l _ _) (MaxLess-r K _)) K<s
               M<s'' = ‚â§-trans (‚â§-trans (MaxLess-r _ _)(MaxLess-r K _)) K<s
               G‚â°G‚ÇÅ = PE.subst (Œª x ‚Üí Œì / lŒµ'' ‚ä©‚ü® k ‚ü© wk (lift id) G [ fst p ] ‚â° wk (lift id) x [ fst p ] / [[G]] ‚â§Œµ' lŒµ'' M<s')
                               (PE.sym G‚ÇÅ‚â°G‚Ä≤) ([G‚â°Ga] ‚â§Œµ' lŒµ'' M<s' M<s'')
               [[snd]] = [snd] ‚â§Œµ' lŒµ'' M<s' (‚â§-trans (MaxLess-l _ _) K<s)
           in convTerm‚ÇÅ ([[G]] ‚â§Œµ' lŒµ'' M<s') ([[G]]‚ÇÅ ‚â§Œµ' lŒµ'' M<s) G‚â°G‚ÇÅ [[snd]]
  convTermT‚ÇÅ (U·µ• (U·µ£ .‚Å∞ 0<1 ‚ä¢Œì) (U·µ£ .‚Å∞ 0<1 ‚ä¢Œì‚ÇÅ)) A‚â°B t = t
  convTermT‚ÇÅ (emb‚Å∞¬π x) A‚â°B t = convTermT‚ÇÅ x A‚â°B t
  convTermT‚ÇÅ (emb¬π‚Å∞ x) A‚â°B t = convTermT‚ÇÅ x A‚â°B t
  
  -- Helper function for conversion of terms converting from right to left.
  convTermT‚ÇÇ : ‚àÄ {k k‚Ä≤ A B t} {[A] : Œì / lŒµ ‚ä©‚ü® k ‚ü© A} {[B] : Œì / lŒµ ‚ä©‚ü® k‚Ä≤ ‚ü© B}
           ‚Üí ShapeView Œì k k‚Ä≤ A B [A] [B]
           ‚Üí (A‚â°B : Œì / lŒµ ‚ä©‚ü® k ‚ü©  A ‚â° B / [A])
           ‚Üí Œì / lŒµ ‚ä©‚ü® k‚Ä≤ ‚ü© t ‚à∑ B / [B]
           ‚Üí Œì / lŒµ ‚ä©‚ü® k ‚ü©  t ‚à∑ A / [A]
  convTermT‚ÇÇ (‚Ñï·µ• D D‚Ä≤) A‚â°B t = t
  convTermT‚ÇÇ (ùîπ·µ• D D‚Ä≤) A‚â°B t = t
  -- convTermT‚ÇÇ (Empty·µ• D D‚Ä≤) A‚â°B t = t
  -- convTermT‚ÇÇ (Unit·µ• D D‚Ä≤) A‚â°B t = t
  convTermT‚ÇÇ (ne (ne K D neK K‚â°K) (ne K‚ÇÅ D‚ÇÅ neK‚ÇÅ K‚â°K‚ÇÅ)) (ne‚Çå M D‚Ä≤ neM K‚â°M)
             (ne‚Çú k d (neNf‚Çú neK‚ÇÇ ‚ä¢k k‚â°k)) =
    let K‚ÇÅ‚â°K = PE.subst (Œª x ‚Üí _  / _ ‚ä¢ x ‚â° _)
                        (whrDet* (red D‚Ä≤ , ne neM) (red D‚ÇÅ , ne neK‚ÇÅ))
                        (sym (‚âÖ-eq (~-to-‚âÖ K‚â°M)))
    in  ne‚Çú k (convRed:*: d K‚ÇÅ‚â°K)
            (neNf‚Çú neK‚ÇÇ (conv ‚ä¢k K‚ÇÅ‚â°K) (~-conv k‚â°k K‚ÇÅ‚â°K))
  convTermT‚ÇÇ {Œì = Œì} {lŒµ = lŒµ} (B·µ• BŒ† (B·µ£ F G D ‚ä¢F ‚ä¢G A‚â°A [F‚Çô] [F] [G] G-ext)
                                      (B·µ£ F‚ÇÅ G‚ÇÅ D‚ÇÅ ‚ä¢F‚ÇÅ ‚ä¢G‚ÇÅ A‚â°A‚ÇÅ [F‚Çô]‚ÇÅ [F]‚ÇÅ [G]‚ÇÅ G-ext‚ÇÅ))
                                      (B‚Çå F‚Ä≤ G‚Ä≤ D‚Ä≤ A‚â°B [F‚â°F‚Çô] [F‚â°F‚Ä≤] [G‚â°G‚Ä≤])
             (Œ†‚Çú ‚ä¢f f‚â°f N [f] N‚ÇÅ [f]‚ÇÅ) =
    let Œ†F‚ÇÅG‚ÇÅ‚â°Œ†F‚Ä≤G‚Ä≤   = whrDet* (red D‚ÇÅ , Œ†‚Çô) (D‚Ä≤ , Œ†‚Çô)
        F‚ÇÅ‚â°F‚Ä≤ , G‚ÇÅ‚â°G‚Ä≤ = B-PE-injectivity BŒ† Œ†F‚ÇÅG‚ÇÅ‚â°Œ†F‚Ä≤G‚Ä≤
        Œ†FG‚â°Œ†F‚ÇÅG‚ÇÅ = PE.subst (Œª x ‚Üí Œì  / lŒµ ‚ä¢ Œ† F ‚ñπ G ‚â° x)
                             (PE.sym Œ†F‚ÇÅG‚ÇÅ‚â°Œ†F‚Ä≤G‚Ä≤) (‚âÖ-eq A‚â°B)
        Nmax = max N (max [F‚â°F‚Çô] [F‚Çô]‚ÇÅ)
        Nmax‚ÇÅ = max N‚ÇÅ (max [F‚â°F‚Çô] [F‚Çô]‚ÇÅ)
    in  Œ†‚Çú (conv ‚ä¢f (sym Œ†FG‚â°Œ†F‚ÇÅG‚ÇÅ)) (‚âÖ-conv f‚â°f (sym Œ†FG‚â°Œ†F‚ÇÅG‚ÇÅ)) Nmax
           (Œª {m} {œÅ} {Œî} {a} {b} [œÅ] ‚â§Œµ lŒµ' N<s N<s' ‚ä¢Œî [a] [b] a‚â°b ‚Üí
              let F‚Çô<s = ‚â§-trans (‚â§-trans (MaxLess-r _ _) (MaxLess-r N _)) N<s'
                  F‚â°F‚Çô<s = ‚â§-trans (‚â§-trans (MaxLess-l _ _) (MaxLess-r N _)) N<s'
                  [F‚â°F‚ÇÅ] = irrelevanceEqR‚Ä≤ (PE.cong (wk œÅ) (PE.sym F‚ÇÅ‚â°F‚Ä≤))
                                           ([F] [œÅ] ‚â§Œµ lŒµ' N<s ‚ä¢Œî)
                                           ([F‚â°F‚Ä≤] [œÅ] ‚â§Œµ lŒµ' N<s F‚â°F‚Çô<s ‚ä¢Œî)
                  [a]‚ÇÅ = convTerm‚ÇÅ ([F] [œÅ] ‚â§Œµ lŒµ' N<s ‚ä¢Œî)
                                   ([F]‚ÇÅ [œÅ] ‚â§Œµ lŒµ' F‚Çô<s ‚ä¢Œî) [F‚â°F‚ÇÅ] [a]
                  [b]‚ÇÅ = convTerm‚ÇÅ ([F] [œÅ] ‚â§Œµ lŒµ' N<s ‚ä¢Œî)
                                   ([F]‚ÇÅ [œÅ] ‚â§Œµ lŒµ' F‚Çô<s ‚ä¢Œî) [F‚â°F‚ÇÅ] [b]
                  a‚â°b‚ÇÅ = convEqTerm‚ÇÅ ([F] [œÅ] ‚â§Œµ lŒµ' N<s ‚ä¢Œî)
                                     ([F]‚ÇÅ [œÅ] ‚â§Œµ lŒµ' F‚Çô<s ‚ä¢Œî) [F‚â°F‚ÇÅ] a‚â°b
                  (M , [Ga]) = ([G] [œÅ] ‚â§Œµ lŒµ' N<s ‚ä¢Œî [a])
                  (M' , [Ga]') = [G]‚ÇÅ [œÅ] ‚â§Œµ lŒµ' F‚Çô<s ‚ä¢Œî [a]‚ÇÅ
                  (M'' , [G‚â°Ga]) = [G‚â°G‚Ä≤] [œÅ] ‚â§Œµ lŒµ' N<s F‚â°F‚Çô<s ‚ä¢Œî [a]
                  (K , [f‚â°fa]) = [f] [œÅ] ‚â§Œµ lŒµ' F‚Çô<s (‚â§-trans (MaxLess-l _ _) N<s') ‚ä¢Œî [a]‚ÇÅ [b]‚ÇÅ a‚â°b‚ÇÅ
                  Kmax = max K (max M' M'')
              in Kmax , Œª ‚â§Œµ' lŒµ'' M<s K<s ‚Üí
                 let M<s' = ‚â§-trans (‚â§-trans (MaxLess-l M' M'') (MaxLess-r K _)) K<s
                     M<s'' = ‚â§-trans (‚â§-trans (MaxLess-r M' M'')(MaxLess-r K _)) K<s
                     [G‚â°G‚ÇÅ] = irrelevanceEqR‚Ä≤ (PE.cong (Œª x ‚Üí wk (lift œÅ) x [ _ ])
                                              (PE.sym G‚ÇÅ‚â°G‚Ä≤)) ([Ga] ‚â§Œµ' lŒµ'' M<s)
                                              ([G‚â°Ga] ‚â§Œµ' lŒµ'' M<s M<s'')
                 in convEqTerm‚ÇÇ ([Ga] ‚â§Œµ' lŒµ'' M<s)
                                ([Ga]' ‚â§Œµ' lŒµ'' M<s') [G‚â°G‚ÇÅ]
                                ([f‚â°fa] ‚â§Œµ' lŒµ'' M<s' (‚â§-trans (MaxLess-l _ _) K<s)))
           Nmax‚ÇÅ
           (Œª {m} {œÅ} {Œî} {a} [œÅ] ‚â§Œµ lŒµ' N<s N<s' ‚ä¢Œî [a] ‚Üí
              let F‚Çô<s = ‚â§-trans (‚â§-trans (MaxLess-r _ _) (MaxLess-r N‚ÇÅ _)) N<s'
                  F‚â°F‚Çô<s = ‚â§-trans (‚â§-trans (MaxLess-l _ _) (MaxLess-r N‚ÇÅ _)) N<s'
                  [F‚â°F‚ÇÅ] = irrelevanceEqR‚Ä≤ (PE.cong (wk œÅ) (PE.sym F‚ÇÅ‚â°F‚Ä≤))
                                           ([F] [œÅ] ‚â§Œµ lŒµ' N<s ‚ä¢Œî)
                                           ([F‚â°F‚Ä≤] [œÅ] ‚â§Œµ lŒµ' N<s F‚â°F‚Çô<s ‚ä¢Œî)
                  [a]‚ÇÅ = convTerm‚ÇÅ ([F] [œÅ] ‚â§Œµ lŒµ' N<s ‚ä¢Œî)
                                   ([F]‚ÇÅ [œÅ] ‚â§Œµ lŒµ' F‚Çô<s ‚ä¢Œî) [F‚â°F‚ÇÅ] [a]
                  (M , [Ga]) = ([G] [œÅ] ‚â§Œµ lŒµ' N<s ‚ä¢Œî [a])
                  (M' , [Ga]') = [G]‚ÇÅ [œÅ] ‚â§Œµ lŒµ' F‚Çô<s ‚ä¢Œî [a]‚ÇÅ
                  (M'' , [G‚â°Ga]) = [G‚â°G‚Ä≤] [œÅ] ‚â§Œµ lŒµ' N<s F‚â°F‚Çô<s ‚ä¢Œî [a]
                  (K , [fa]) = [f]‚ÇÅ [œÅ] ‚â§Œµ lŒµ' F‚Çô<s (‚â§-trans (MaxLess-l _ _) N<s') ‚ä¢Œî [a]‚ÇÅ
                  Kmax = max K (max M' M'')
              in Kmax , Œª ‚â§Œµ' lŒµ'' M<s K<s ‚Üí
                 let M<s' = ‚â§-trans (‚â§-trans (MaxLess-l M' M'') (MaxLess-r K _)) K<s
                     M<s'' = ‚â§-trans (‚â§-trans (MaxLess-r M' M'')(MaxLess-r K _)) K<s
                     [G‚â°G‚ÇÅ] = irrelevanceEqR‚Ä≤ (PE.cong (Œª x ‚Üí wk (lift œÅ) x [ _ ])
                                              (PE.sym G‚ÇÅ‚â°G‚Ä≤)) ([Ga] ‚â§Œµ' lŒµ'' M<s)
                                              ([G‚â°Ga] ‚â§Œµ' lŒµ'' M<s M<s'')
                 in convTerm‚ÇÇ ([Ga] ‚â§Œµ' lŒµ'' M<s) ([Ga]' ‚â§Œµ' lŒµ'' M<s') [G‚â°G‚ÇÅ]
                              ([fa] ‚â§Œµ' lŒµ'' M<s' (‚â§-trans (MaxLess-l _ _) K<s)))
  convTermT‚ÇÇ {Œì = Œì} {lŒµ = lŒµ} {k = k} {k‚Ä≤ = k‚Ä≤} (B·µ• BŒ£ (B·µ£ F G D ‚ä¢F ‚ä¢G A‚â°A [F‚Çô] [F] [G] G-ext)
                                                        (B·µ£ F‚ÇÅ G‚ÇÅ D‚ÇÅ ‚ä¢F‚ÇÅ ‚ä¢G‚ÇÅ A‚â°A‚ÇÅ [F‚Çô]‚ÇÅ [F]‚ÇÅ [G]‚ÇÅ G-ext‚ÇÅ))
                                                        (B‚Çå F‚Ä≤ G‚Ä≤ D‚Ä≤ A‚â°B [F‚â°F‚Çô] [F‚â°F‚Ä≤] [G‚â°G‚Ä≤])
             (Œ£‚Çú p d pProd p‚âÖp N [prop]) =
    let Œ£F‚ÇÅG‚ÇÅ‚â°Œ£F‚Ä≤G‚Ä≤   = whrDet* (red D‚ÇÅ , Œ£‚Çô) (D‚Ä≤ , Œ£‚Çô)
        F‚ÇÅ‚â°F‚Ä≤ , G‚ÇÅ‚â°G‚Ä≤ = B-PE-injectivity BŒ£ Œ£F‚ÇÅG‚ÇÅ‚â°Œ£F‚Ä≤G‚Ä≤
        Œ£FG‚â°Œ£F‚ÇÅG‚ÇÅ = PE.subst (Œª x ‚Üí Œì  / lŒµ ‚ä¢ Œ£ F ‚ñπ G ‚â° x)
                             (PE.sym Œ£F‚ÇÅG‚ÇÅ‚â°Œ£F‚Ä≤G‚Ä≤) (‚âÖ-eq A‚â°B)
        ‚ä¢Œì = wf ‚ä¢F
        ‚ä¢Œì‚ÇÅ = wf ‚ä¢F‚ÇÅ
        Nmax = max N (max [F‚â°F‚Çô] [F‚Çô]‚ÇÅ)
    in Œ£‚Çú p (convRed:*: d (sym Œ£FG‚â°Œ£F‚ÇÅG‚ÇÅ)) pProd (‚âÖ-conv p‚âÖp (sym Œ£FG‚â°Œ£F‚ÇÅG‚ÇÅ)) Nmax
       Œª ‚â§Œµ lŒµ' N<s N<s' ‚Üí
         let F‚Çô<s = ‚â§-trans (‚â§-trans (MaxLess-r _ _) (MaxLess-r N _)) N<s'
             F‚â°F‚Çô<s = ‚â§-trans (‚â§-trans (MaxLess-l _ _) (MaxLess-r N _)) N<s'
             F‚â°F‚ÇÅ = PE.subst (Œª x ‚Üí Œì / lŒµ' ‚ä©‚ü® k ‚ü© wk id F ‚â° wk id x / [F] Wk.id ‚â§Œµ lŒµ' N<s (Con‚â§ ‚â§Œµ ‚ä¢Œì))
                             (PE.sym F‚ÇÅ‚â°F‚Ä≤)
                             ([F‚â°F‚Ä≤] Wk.id ‚â§Œµ lŒµ' N<s F‚â°F‚Çô<s (Con‚â§ ‚â§Œµ ‚ä¢Œì))
             ([fst] , K , [snd]) = [prop] ‚â§Œµ lŒµ' F‚Çô<s (‚â§-trans (MaxLess-l _ _) N<s')
             [fst]‚ÇÅ = convTerm‚ÇÇ ([F] Wk.id ‚â§Œµ lŒµ' N<s (Con‚â§ ‚â§Œµ ‚ä¢Œì))
                                ([F]‚ÇÅ Wk.id ‚â§Œµ lŒµ' F‚Çô<s (Con‚â§ ‚â§Œµ (wf ‚ä¢F‚ÇÅ))) F‚â°F‚ÇÅ [fst]
             (M , [[G]]) = [G] Wk.id ‚â§Œµ lŒµ' N<s (Con‚â§ ‚â§Œµ ‚ä¢Œì) [fst]‚ÇÅ
             (M' , [[G]]‚ÇÅ) = [G]‚ÇÅ Wk.id ‚â§Œµ lŒµ' F‚Çô<s (Con‚â§ ‚â§Œµ (wf ‚ä¢F‚ÇÅ)) [fst]
             (M'' , [G‚â°Ga]) = [G‚â°G‚Ä≤] Wk.id ‚â§Œµ lŒµ' N<s F‚â°F‚Çô<s (Con‚â§ ‚â§Œµ ‚ä¢Œì) [fst]‚ÇÅ
             Kmax = max K (max M' M'')
         in [fst]‚ÇÅ , Kmax , Œª ‚â§Œµ' lŒµ'' M<s K<s ‚Üí
           let M<s' = ‚â§-trans (‚â§-trans (MaxLess-l _ _) (MaxLess-r K _)) K<s
               M<s'' = ‚â§-trans (‚â§-trans (MaxLess-r _ _)(MaxLess-r K _)) K<s
               G‚â°G‚ÇÅ = PE.subst (Œª x ‚Üí Œì / lŒµ'' ‚ä©‚ü® k ‚ü© wk (lift id) G [ fst p ] ‚â° wk (lift id) x [ fst p ] / [[G]] ‚â§Œµ' lŒµ'' M<s)
                               (PE.sym G‚ÇÅ‚â°G‚Ä≤) ([G‚â°Ga] ‚â§Œµ' lŒµ'' M<s M<s'')
               [[snd]] = [snd] ‚â§Œµ' lŒµ'' M<s' (‚â§-trans (MaxLess-l _ _) K<s)
           in convTerm‚ÇÇ ([[G]] ‚â§Œµ' lŒµ'' M<s) ([[G]]‚ÇÅ ‚â§Œµ' lŒµ'' M<s') G‚â°G‚ÇÅ [[snd]]
  convTermT‚ÇÇ (U·µ• (U·µ£ .‚Å∞ 0<1 ‚ä¢Œì) (U·µ£ .‚Å∞ 0<1 ‚ä¢Œì‚ÇÅ)) A‚â°B t = t
  convTermT‚ÇÇ (emb‚Å∞¬π x) A‚â°B t = convTermT‚ÇÇ x A‚â°B t
  convTermT‚ÇÇ (emb¬π‚Å∞ x) A‚â°B t = convTermT‚ÇÇ x A‚â°B t
  
  -- Conversion of terms converting from left to right.
  convTerm‚ÇÅ : ‚àÄ {A B t k k‚Ä≤} ([A] : Œì / lŒµ ‚ä©‚ü® k ‚ü© A) ([B] : Œì / lŒµ ‚ä©‚ü® k‚Ä≤ ‚ü© B)
            ‚Üí Œì / lŒµ ‚ä©‚ü® k ‚ü©  A ‚â° B / [A]
            ‚Üí Œì / lŒµ ‚ä©‚ü® k ‚ü©  t ‚à∑ A / [A]
            ‚Üí Œì / lŒµ ‚ä©‚ü® k‚Ä≤ ‚ü© t ‚à∑ B / [B]
  convTerm‚ÇÅ [A] [B] A‚â°B t = convTermT‚ÇÅ (goodCases [A] [B] A‚â°B) A‚â°B t

  -- Conversion of terms converting from right to left.
  convTerm‚ÇÇ : ‚àÄ {A B t k k‚Ä≤} ([A] : Œì / lŒµ ‚ä©‚ü® k ‚ü© A) ([B] : Œì / lŒµ ‚ä©‚ü® k‚Ä≤ ‚ü© B)
          ‚Üí Œì / lŒµ ‚ä©‚ü® k ‚ü©  A ‚â° B / [A]
          ‚Üí Œì / lŒµ ‚ä©‚ü® k‚Ä≤ ‚ü© t ‚à∑ B / [B]
          ‚Üí Œì / lŒµ ‚ä©‚ü® k ‚ü©  t ‚à∑ A / [A]
  -- NOTE: this would be easier to define by mutual induction with symEq (which needs conversion),
  -- rather than by defining everything from scratch for both left-to-right and right-to-left,
  -- but with the mutual definition termination checking fails in Agda.
  convTerm‚ÇÇ [A] [B] A‚â°B t = convTermT‚ÇÇ (goodCases [A] [B] A‚â°B) A‚â°B t

  -- Conversion of terms converting from right to left
  -- with some propositionally equal types.
  convTerm‚ÇÇ‚Ä≤ : ‚àÄ {A B B‚Ä≤ t k k‚Ä≤} ‚Üí B PE.‚â° B‚Ä≤
          ‚Üí ([A] : Œì / lŒµ ‚ä©‚ü® k ‚ü© A) ([B] : Œì / lŒµ ‚ä©‚ü® k‚Ä≤ ‚ü© B)
          ‚Üí Œì / lŒµ ‚ä©‚ü® k ‚ü©  A ‚â° B‚Ä≤ / [A]
          ‚Üí Œì / lŒµ ‚ä©‚ü® k‚Ä≤ ‚ü© t ‚à∑ B / [B]
          ‚Üí Œì / lŒµ ‚ä©‚ü® k ‚ü©  t ‚à∑ A / [A]
  convTerm‚ÇÇ‚Ä≤ PE.refl [A] [B] A‚â°B t = convTerm‚ÇÇ [A] [B] A‚â°B t


  -- Helper function for conversion of term equality converting from left to right.
  convEqTermT‚ÇÅ : ‚àÄ {k k‚Ä≤ A B t u} {[A] : Œì / lŒµ ‚ä©‚ü® k ‚ü© A} {[B] : Œì / lŒµ ‚ä©‚ü® k‚Ä≤ ‚ü© B}
               ‚Üí ShapeView Œì k k‚Ä≤ A B [A] [B]
               ‚Üí (A‚â°B : Œì / lŒµ ‚ä©‚ü® k ‚ü©  A ‚â° B / [A])
               ‚Üí Œì / lŒµ ‚ä©‚ü® k ‚ü©  t ‚â° u ‚à∑ A / [A]
               ‚Üí Œì / lŒµ ‚ä©‚ü® k‚Ä≤ ‚ü© t ‚â° u ‚à∑ B / [B]
  convEqTermT‚ÇÅ (‚Ñï·µ• D D‚Ä≤) A‚â°B t‚â°u = t‚â°u
  convEqTermT‚ÇÅ (ùîπ·µ• D D‚Ä≤) A‚â°B t‚â°u = t‚â°u
  -- convEqTermT‚ÇÅ (Empty·µ• D D‚Ä≤) A‚â°B t‚â°u = t‚â°u
  -- convEqTermT‚ÇÅ (Unit·µ• D D‚Ä≤) A‚â°B t‚â°u = t‚â°u
  convEqTermT‚ÇÅ (ne (ne K D neK K‚â°K) (ne K‚ÇÅ D‚ÇÅ neK‚ÇÅ K‚â°K‚ÇÅ)) (ne‚Çå M D‚Ä≤ neM K‚â°M)
               (ne‚Çú‚Çå k m d d‚Ä≤ (neNf‚Çú‚Çå neK‚ÇÇ neM‚ÇÅ k‚â°m)) =
    let K‚â°K‚ÇÅ = PE.subst (Œª x ‚Üí _  / _ ‚ä¢ _ ‚â° x)
                        (whrDet* (red D‚Ä≤ , ne neM) (red D‚ÇÅ , ne neK‚ÇÅ))
                        (‚âÖ-eq (~-to-‚âÖ K‚â°M))
    in  ne‚Çú‚Çå k m (convRed:*: d K‚â°K‚ÇÅ)
                 (convRed:*: d‚Ä≤ K‚â°K‚ÇÅ)
                 (neNf‚Çú‚Çå neK‚ÇÇ neM‚ÇÅ (~-conv k‚â°m K‚â°K‚ÇÅ))
  convEqTermT‚ÇÅ {Œì = Œì} {lŒµ = lŒµ} (B·µ• BŒ† (B·µ£ F G D ‚ä¢F ‚ä¢G A‚â°A [F‚Çô] [F] [G] G-ext)
                                        (B·µ£ F‚ÇÅ G‚ÇÅ D‚ÇÅ ‚ä¢F‚ÇÅ ‚ä¢G‚ÇÅ A‚â°A‚ÇÅ [F‚Çô]‚ÇÅ [F]‚ÇÅ [G]‚ÇÅ G-ext‚ÇÅ))
                                        [A‚â°B]@(B‚Çå F‚Ä≤ G‚Ä≤ D‚Ä≤ A‚â°B [F‚â°F‚Çô] [F‚â°F‚Ä≤] [G‚â°G‚Ä≤])
               (Œ†‚Çú‚Çå f‚â°g [f] [g] N [f‚â°g]) =
    let [A] = B·µ£‚Ä≤ BŒ† F G D ‚ä¢F ‚ä¢G A‚â°A [F‚Çô] [F] [G] G-ext
        [B] = B·µ£‚Ä≤ BŒ† F‚ÇÅ G‚ÇÅ D‚ÇÅ ‚ä¢F‚ÇÅ ‚ä¢G‚ÇÅ A‚â°A‚ÇÅ [F‚Çô]‚ÇÅ [F]‚ÇÅ [G]‚ÇÅ G-ext‚ÇÅ
        Œ†F‚ÇÅG‚ÇÅ‚â°Œ†F‚Ä≤G‚Ä≤ = whrDet* (red D‚ÇÅ , Œ†‚Çô) (D‚Ä≤ , Œ†‚Çô)
        Œ†FG‚â°Œ†F‚ÇÅG‚ÇÅ = PE.subst (Œª x ‚Üí Œì  / lŒµ ‚ä¢ Œ† F ‚ñπ G ‚â° x)
                             (PE.sym Œ†F‚ÇÅG‚ÇÅ‚â°Œ†F‚Ä≤G‚Ä≤) (‚âÖ-eq A‚â°B)
        F‚ÇÅ‚â°F‚Ä≤ , G‚ÇÅ‚â°G‚Ä≤ = B-PE-injectivity BŒ† Œ†F‚ÇÅG‚ÇÅ‚â°Œ†F‚Ä≤G‚Ä≤
        Nmax = max N (max [F‚â°F‚Çô] [F‚Çô])
    in Œ†‚Çú‚Çå (‚âÖ-conv f‚â°g Œ†FG‚â°Œ†F‚ÇÅG‚ÇÅ) (convTerm‚ÇÅ [A] [B] [A‚â°B] [f]) (convTerm‚ÇÅ [A] [B] [A‚â°B] [g])
           Nmax
           (Œª {m} {œÅ} {Œî} {a} [œÅ] ‚â§Œµ lŒµ' N<s N<s' ‚ä¢Œî [a] ‚Üí
             let F‚Çô<s = ‚â§-trans (‚â§-trans (MaxLess-r _ _) (MaxLess-r N _)) N<s'
                 F‚â°F‚Çô<s = ‚â§-trans (‚â§-trans (MaxLess-l _ _) (MaxLess-r N _)) N<s'
                 [F‚â°F‚ÇÅ] = irrelevanceEqR‚Ä≤ (PE.cong (wk œÅ) (PE.sym F‚ÇÅ‚â°F‚Ä≤))
                                          ([F] [œÅ] ‚â§Œµ lŒµ' F‚Çô<s ‚ä¢Œî)
                                          ([F‚â°F‚Ä≤] [œÅ] ‚â§Œµ lŒµ' F‚Çô<s F‚â°F‚Çô<s ‚ä¢Œî)
                 [a]‚ÇÅ = convTerm‚ÇÇ ([F] [œÅ] ‚â§Œµ lŒµ' F‚Çô<s ‚ä¢Œî)
                        ([F]‚ÇÅ [œÅ] ‚â§Œµ lŒµ' N<s ‚ä¢Œî) [F‚â°F‚ÇÅ] [a]
                 (M , [Ga]) = ([G] [œÅ] ‚â§Œµ lŒµ' F‚Çô<s ‚ä¢Œî [a]‚ÇÅ)
                 (M‚Ä≤ , [Ga]‚Ä≤) = [G]‚ÇÅ [œÅ] ‚â§Œµ lŒµ' N<s ‚ä¢Œî [a]
                 (M'' , [G‚â°Ga]) = [G‚â°G‚Ä≤] [œÅ] ‚â§Œµ lŒµ' F‚Çô<s F‚â°F‚Çô<s ‚ä¢Œî [a]‚ÇÅ
                 (K , [f‚â°ga]) = [f‚â°g] [œÅ] ‚â§Œµ lŒµ' F‚Çô<s (‚â§-trans (MaxLess-l _ _) N<s') ‚ä¢Œî [a]‚ÇÅ
                 Kmax = max K (max M M'')
             in Kmax , Œª ‚â§Œµ' lŒµ'' M<s K<s ‚Üí
                 let M<s' = ‚â§-trans (‚â§-trans (MaxLess-l M M'') (MaxLess-r K _)) K<s
                     M<s'' = ‚â§-trans (‚â§-trans (MaxLess-r M M'')(MaxLess-r K _)) K<s
                     [G‚â°G‚ÇÅ] = irrelevanceEqR‚Ä≤ (PE.cong (Œª x ‚Üí wk (lift œÅ) x [ _ ])
                                              (PE.sym G‚ÇÅ‚â°G‚Ä≤)) ([Ga] ‚â§Œµ' lŒµ'' M<s')
                                              ([G‚â°Ga] ‚â§Œµ' lŒµ'' M<s' M<s'')
                 in convEqTerm‚ÇÅ ([Ga] ‚â§Œµ' lŒµ'' M<s') ([Ga]‚Ä≤ ‚â§Œµ' lŒµ'' M<s) [G‚â°G‚ÇÅ]
                              ([f‚â°ga] ‚â§Œµ' lŒµ'' M<s' (‚â§-trans (MaxLess-l _ _) K<s)))
  convEqTermT‚ÇÅ {Œì = Œì} {lŒµ = lŒµ} (B·µ• BŒ£ (B·µ£ F G D ‚ä¢F ‚ä¢G A‚â°A [F‚Çô] [F] [G] G-ext)
                                        (B·µ£ F‚ÇÅ G‚ÇÅ D‚ÇÅ ‚ä¢F‚ÇÅ ‚ä¢G‚ÇÅ A‚â°A‚ÇÅ [F‚Çô]‚ÇÅ [F]‚ÇÅ [G]‚ÇÅ G-ext‚ÇÅ))
                                        [A‚â°B]@(B‚Çå F‚Ä≤ G‚Ä≤ D‚Ä≤ A‚â°B [F‚â°F‚Çô] [F‚â°F‚Ä≤] [G‚â°G‚Ä≤])
               (Œ£‚Çú‚Çå  p r d d‚Ä≤ pProd rProd p‚âÖr [t] [u] N [prop‚â°]) =
    let [A] = B·µ£‚Ä≤ BŒ£ F G D ‚ä¢F ‚ä¢G A‚â°A [F‚Çô] [F] [G] G-ext
        [B] = B·µ£‚Ä≤ BŒ£ F‚ÇÅ G‚ÇÅ D‚ÇÅ ‚ä¢F‚ÇÅ ‚ä¢G‚ÇÅ A‚â°A‚ÇÅ [F‚Çô]‚ÇÅ [F]‚ÇÅ [G]‚ÇÅ G-ext‚ÇÅ
        Œ£F‚ÇÅG‚ÇÅ‚â°Œ£F‚Ä≤G‚Ä≤ = whrDet* (red D‚ÇÅ , Œ£‚Çô) (D‚Ä≤ , Œ£‚Çô)
        F‚ÇÅ‚â°F‚Ä≤ , G‚ÇÅ‚â°G‚Ä≤ = B-PE-injectivity BŒ£ Œ£F‚ÇÅG‚ÇÅ‚â°Œ£F‚Ä≤G‚Ä≤
        Œ£FG‚â°Œ£F‚ÇÅG‚ÇÅ = PE.subst (Œª x ‚Üí Œì  / lŒµ ‚ä¢ Œ£ F ‚ñπ G ‚â° x)
                             (PE.sym Œ£F‚ÇÅG‚ÇÅ‚â°Œ£F‚Ä≤G‚Ä≤) (‚âÖ-eq A‚â°B)
        ‚ä¢Œì = wf ‚ä¢F
        ‚ä¢Œì‚ÇÅ = wf ‚ä¢F‚ÇÅ
        Nmax = max N (max [F‚â°F‚Çô] [F‚Çô])
    in Œ£‚Çú‚Çå p r (convRed:*: d Œ£FG‚â°Œ£F‚ÇÅG‚ÇÅ) (convRed:*: d‚Ä≤ Œ£FG‚â°Œ£F‚ÇÅG‚ÇÅ) pProd rProd (‚âÖ-conv p‚âÖr Œ£FG‚â°Œ£F‚ÇÅG‚ÇÅ)
          (convTerm‚ÇÅ [A] [B] [A‚â°B] [t]) (convTerm‚ÇÅ [A] [B] [A‚â°B] [u])
          Nmax
       Œª ‚â§Œµ lŒµ' N<s N<s' ‚Üí
         let F‚Çô<s = ‚â§-trans (‚â§-trans (MaxLess-r _ _) (MaxLess-r N _)) N<s'
             F‚â°F‚Çô<s = ‚â§-trans (‚â§-trans (MaxLess-l _ _) (MaxLess-r N _)) N<s'
             F‚â°F‚ÇÅ = PE.subst (Œª x ‚Üí Œì / lŒµ' ‚ä©‚ü® _ ‚ü© wk id F ‚â° wk id x / [F] Wk.id ‚â§Œµ lŒµ' F‚Çô<s (Con‚â§ ‚â§Œµ ‚ä¢Œì))
                             (PE.sym F‚ÇÅ‚â°F‚Ä≤)
                             ([F‚â°F‚Ä≤] Wk.id ‚â§Œµ lŒµ' F‚Çô<s F‚â°F‚Çô<s (Con‚â§ ‚â§Œµ ‚ä¢Œì))
             ([fstp] , [fstr] , [fst‚â°] , K , [snd‚â°]) = [prop‚â°] ‚â§Œµ lŒµ' F‚Çô<s (‚â§-trans (MaxLess-l _ _) N<s')
             [fstp]‚ÇÅ = convTerm‚ÇÅ ([F] Wk.id ‚â§Œµ lŒµ' F‚Çô<s (Con‚â§ ‚â§Œµ ‚ä¢Œì))
                                 ([F]‚ÇÅ Wk.id ‚â§Œµ lŒµ' N<s (Con‚â§ ‚â§Œµ (wf ‚ä¢F‚ÇÅ))) F‚â°F‚ÇÅ [fstp]
             [fstr]‚ÇÅ = convTerm‚ÇÅ ([F] Wk.id ‚â§Œµ lŒµ' F‚Çô<s (Con‚â§ ‚â§Œµ ‚ä¢Œì))
                                 ([F]‚ÇÅ Wk.id ‚â§Œµ lŒµ' N<s (Con‚â§ ‚â§Œµ (wf ‚ä¢F‚ÇÅ))) F‚â°F‚ÇÅ [fstr]
             [fst‚â°]‚ÇÅ = convEqTerm‚ÇÅ ([F] Wk.id ‚â§Œµ lŒµ' F‚Çô<s (Con‚â§ ‚â§Œµ ‚ä¢Œì))
                                   ([F]‚ÇÅ Wk.id ‚â§Œµ lŒµ' N<s (Con‚â§ ‚â§Œµ (wf ‚ä¢F‚ÇÅ))) F‚â°F‚ÇÅ [fst‚â°]
             (M , [[G]]) = [G] Wk.id ‚â§Œµ lŒµ' F‚Çô<s (Con‚â§ ‚â§Œµ ‚ä¢Œì) [fstp]
             (M' , [[G]]‚ÇÅ) = [G]‚ÇÅ Wk.id ‚â§Œµ lŒµ' N<s (Con‚â§ ‚â§Œµ (wf ‚ä¢F‚ÇÅ)) [fstp]‚ÇÅ
             (M'' , [G‚â°Ga]) = [G‚â°G‚Ä≤] Wk.id ‚â§Œµ lŒµ' F‚Çô<s F‚â°F‚Çô<s (Con‚â§ ‚â§Œµ ‚ä¢Œì) [fstp]
             Kmax = max K (max M M'')
         in [fstp]‚ÇÅ , [fstr]‚ÇÅ , [fst‚â°]‚ÇÅ , Kmax , Œª ‚â§Œµ' lŒµ'' M<s K<s ‚Üí
           let M<s' = ‚â§-trans (‚â§-trans (MaxLess-l _ _) (MaxLess-r K _)) K<s
               M<s'' = ‚â§-trans (‚â§-trans (MaxLess-r _ _)(MaxLess-r K _)) K<s
               G‚â°G‚ÇÅ = PE.subst (Œª x ‚Üí Œì / lŒµ'' ‚ä©‚ü® _ ‚ü© wk (lift id) G [ fst p ] ‚â° wk (lift id) x [ fst p ] / [[G]] ‚â§Œµ' lŒµ'' M<s')
                               (PE.sym G‚ÇÅ‚â°G‚Ä≤) ([G‚â°Ga] ‚â§Œµ' lŒµ'' M<s' M<s'')
               [[snd‚â°]] = [snd‚â°] ‚â§Œµ' lŒµ'' M<s' (‚â§-trans (MaxLess-l _ _) K<s)
           in convEqTerm‚ÇÅ ([[G]] ‚â§Œµ' lŒµ'' M<s') ([[G]]‚ÇÅ ‚â§Œµ' lŒµ'' M<s) G‚â°G‚ÇÅ [[snd‚â°]]
  convEqTermT‚ÇÅ (U·µ• (U·µ£ .‚Å∞ 0<1 ‚ä¢Œì) (U·µ£ .‚Å∞ 0<1 ‚ä¢Œì‚ÇÅ)) A‚â°B t‚â°u = t‚â°u
  convEqTermT‚ÇÅ (emb‚Å∞¬π x) A‚â°B t‚â°u = convEqTermT‚ÇÅ x A‚â°B t‚â°u
  convEqTermT‚ÇÅ (emb¬π‚Å∞ x) A‚â°B t‚â°u = convEqTermT‚ÇÅ x A‚â°B t‚â°u

  -- Helper function for conversion of term equality converting from right to left.
  convEqTermT‚ÇÇ : ‚àÄ {k k‚Ä≤ A B t u} {[A] : Œì / lŒµ ‚ä©‚ü® k ‚ü© A} {[B] : Œì / lŒµ ‚ä©‚ü® k‚Ä≤ ‚ü© B}
             ‚Üí ShapeView Œì k k‚Ä≤ A B [A] [B]
             ‚Üí (A‚â°B : Œì / lŒµ ‚ä©‚ü® k ‚ü©  A ‚â° B / [A])
             ‚Üí Œì / lŒµ ‚ä©‚ü® k‚Ä≤ ‚ü© t ‚â° u ‚à∑ B / [B]
             ‚Üí Œì / lŒµ ‚ä©‚ü® k ‚ü©  t ‚â° u ‚à∑ A / [A]
  convEqTermT‚ÇÇ (‚Ñï·µ• D D‚Ä≤) A‚â°B t‚â°u = t‚â°u
  convEqTermT‚ÇÇ (ùîπ·µ• D D‚Ä≤) A‚â°B t‚â°u = t‚â°u
  -- convEqTermT‚ÇÇ (Empty·µ• D D‚Ä≤) A‚â°B t‚â°u = t‚â°u
  -- convEqTermT‚ÇÇ (Unit·µ• D D‚Ä≤) A‚â°B t‚â°u = t‚â°u
  convEqTermT‚ÇÇ (ne (ne K D neK K‚â°K) (ne K‚ÇÅ D‚ÇÅ neK‚ÇÅ K‚â°K‚ÇÅ)) (ne‚Çå M D‚Ä≤ neM K‚â°M)
               (ne‚Çú‚Çå k m d d‚Ä≤ (neNf‚Çú‚Çå neK‚ÇÇ neM‚ÇÅ k‚â°m)) =
    let K‚ÇÅ‚â°K = PE.subst (Œª x ‚Üí _  / _ ‚ä¢ x ‚â° _)
                        (whrDet* (red D‚Ä≤ , ne neM) (red D‚ÇÅ , ne neK‚ÇÅ))
                        (sym (‚âÖ-eq (~-to-‚âÖ K‚â°M)))
    in  ne‚Çú‚Çå k m (convRed:*: d K‚ÇÅ‚â°K) (convRed:*: d‚Ä≤ K‚ÇÅ‚â°K)
                 (neNf‚Çú‚Çå neK‚ÇÇ neM‚ÇÅ (~-conv k‚â°m K‚ÇÅ‚â°K))
  convEqTermT‚ÇÇ {Œì = Œì} {lŒµ = lŒµ} (B·µ• BŒ† (B·µ£ F G D ‚ä¢F ‚ä¢G A‚â°A [F‚Çô] [F] [G] G-ext)
                                        (B·µ£ F‚ÇÅ G‚ÇÅ D‚ÇÅ ‚ä¢F‚ÇÅ ‚ä¢G‚ÇÅ A‚â°A‚ÇÅ [F‚Çô]‚ÇÅ [F]‚ÇÅ [G]‚ÇÅ G-ext‚ÇÅ))
                                        [A‚â°B]@(B‚Çå F‚Ä≤ G‚Ä≤ D‚Ä≤ A‚â°B [F‚â°F‚Çô] [F‚â°F‚Ä≤] [G‚â°G‚Ä≤])
               (Œ†‚Çú‚Çå f‚â°g [f] [g] N [f‚â°g]) =
    let [A] = B·µ£‚Ä≤ BŒ† F G D ‚ä¢F ‚ä¢G A‚â°A [F‚Çô] [F] [G] G-ext
        [B] = B·µ£‚Ä≤ BŒ† F‚ÇÅ G‚ÇÅ D‚ÇÅ ‚ä¢F‚ÇÅ ‚ä¢G‚ÇÅ A‚â°A‚ÇÅ [F‚Çô]‚ÇÅ [F]‚ÇÅ [G]‚ÇÅ G-ext‚ÇÅ
        Œ†F‚ÇÅG‚ÇÅ‚â°Œ†F‚Ä≤G‚Ä≤ = whrDet* (red D‚ÇÅ , Œ†‚Çô) (D‚Ä≤ , Œ†‚Çô)
        Œ†FG‚â°Œ†F‚ÇÅG‚ÇÅ = PE.subst (Œª x ‚Üí Œì  / lŒµ ‚ä¢ Œ† F ‚ñπ G ‚â° x)
                             (PE.sym Œ†F‚ÇÅG‚ÇÅ‚â°Œ†F‚Ä≤G‚Ä≤) (‚âÖ-eq A‚â°B)
        F‚ÇÅ‚â°F‚Ä≤ , G‚ÇÅ‚â°G‚Ä≤ = B-PE-injectivity BŒ† Œ†F‚ÇÅG‚ÇÅ‚â°Œ†F‚Ä≤G‚Ä≤
        Nmax = max N (max [F‚â°F‚Çô] [F‚Çô]‚ÇÅ)
    in Œ†‚Çú‚Çå (‚âÖ-conv f‚â°g (sym Œ†FG‚â°Œ†F‚ÇÅG‚ÇÅ)) (convTerm‚ÇÇ [A] [B] [A‚â°B] [f]) (convTerm‚ÇÇ [A] [B] [A‚â°B] [g])
           Nmax
           (Œª {m} {œÅ} {Œî} {a} [œÅ] ‚â§Œµ lŒµ' N<s N<s' ‚ä¢Œî [a] ‚Üí
             let F‚Çô<s = ‚â§-trans (‚â§-trans (MaxLess-r _ _) (MaxLess-r N _)) N<s'
                 F‚â°F‚Çô<s = ‚â§-trans (‚â§-trans (MaxLess-l _ _) (MaxLess-r N _)) N<s'
                 [F‚â°F‚ÇÅ] = irrelevanceEqR‚Ä≤ (PE.cong (wk œÅ) (PE.sym F‚ÇÅ‚â°F‚Ä≤))
                                          ([F] [œÅ] ‚â§Œµ lŒµ' N<s ‚ä¢Œî)
                                          ([F‚â°F‚Ä≤] [œÅ] ‚â§Œµ lŒµ' N<s F‚â°F‚Çô<s ‚ä¢Œî)
                 [a]‚ÇÅ = convTerm‚ÇÅ ([F] [œÅ] ‚â§Œµ lŒµ' N<s ‚ä¢Œî)
                        ([F]‚ÇÅ [œÅ] ‚â§Œµ lŒµ' F‚Çô<s ‚ä¢Œî) [F‚â°F‚ÇÅ] [a]
                 (M , [Ga]) = ([G] [œÅ] ‚â§Œµ lŒµ' N<s ‚ä¢Œî [a])
                 (M‚Ä≤ , [Ga]‚Ä≤) = [G]‚ÇÅ [œÅ] ‚â§Œµ lŒµ' F‚Çô<s ‚ä¢Œî [a]‚ÇÅ
                 (M'' , [G‚â°Ga]) = [G‚â°G‚Ä≤] [œÅ] ‚â§Œµ lŒµ' N<s F‚â°F‚Çô<s ‚ä¢Œî [a]
                 (K , [f‚â°ga]) = [f‚â°g] [œÅ] ‚â§Œµ lŒµ' F‚Çô<s (‚â§-trans (MaxLess-l _ _) N<s') ‚ä¢Œî [a]‚ÇÅ
                 Kmax = max K (max M‚Ä≤ M'')
             in Kmax , Œª ‚â§Œµ' lŒµ'' M<s K<s ‚Üí
                 let M<s' = ‚â§-trans (‚â§-trans (MaxLess-l M‚Ä≤ M'') (MaxLess-r K _)) K<s
                     M<s'' = ‚â§-trans (‚â§-trans (MaxLess-r M‚Ä≤ M'')(MaxLess-r K _)) K<s
                     [G‚â°G‚ÇÅ] = irrelevanceEqR‚Ä≤ (PE.cong (Œª x ‚Üí wk (lift œÅ) x [ _ ])
                                              (PE.sym G‚ÇÅ‚â°G‚Ä≤)) ([Ga] ‚â§Œµ' lŒµ'' M<s)
                                              ([G‚â°Ga] ‚â§Œµ' lŒµ'' M<s M<s'')
                 in convEqTerm‚ÇÇ ([Ga] ‚â§Œµ' lŒµ'' M<s) ([Ga]‚Ä≤ ‚â§Œµ' lŒµ'' M<s') [G‚â°G‚ÇÅ]
                              ([f‚â°ga] ‚â§Œµ' lŒµ'' M<s' (‚â§-trans (MaxLess-l _ _) K<s)))
  --   Œ†‚Çú‚Çå f g (convRed:*: d (sym Œ†FG‚â°Œ†F‚ÇÅG‚ÇÅ)) (convRed:*: d‚Ä≤ (sym Œ†FG‚â°Œ†F‚ÇÅG‚ÇÅ))
  --           funcF funcG (‚âÖ-conv t‚â°u (sym Œ†FG‚â°Œ†F‚ÇÅG‚ÇÅ))
  --           (convTerm‚ÇÇ [A] [B] [A‚â°B] [t]) (convTerm‚ÇÇ [A] [B] [A‚â°B] [u])
  --           (Œª {_} {œÅ} {Œî : Con Term _} {a} {l' : LCon} {‚â§Œµ : _ ‚â§‚Çó l'} [œÅ] ‚ä¢Œî [a] ‚Üí
  --              let F‚ÇÅ‚â°F‚Ä≤ , G‚ÇÅ‚â°G‚Ä≤ = B-PE-injectivity BŒ† (whrDet* (red D‚ÇÅ , Œ†‚Çô) (D‚Ä≤ , Œ†‚Çô))
  --                  [F‚â°F‚ÇÅ] = irrelevanceEqR‚Ä≤ (PE.cong (wk œÅ) (PE.sym F‚ÇÅ‚â°F‚Ä≤))
  --                                           ([F] [œÅ] ‚ä¢Œî) ([F‚â°F‚Ä≤] [œÅ] ‚ä¢Œî)
  --                  [a]‚ÇÅ = convTerm‚ÇÅ ([F] [œÅ] ‚ä¢Œî) ([F]‚ÇÅ {‚â§Œµ = ‚â§Œµ} [œÅ] ‚ä¢Œî) [F‚â°F‚ÇÅ] [a]
  --                  [G‚â°G‚ÇÅ] = irrelevanceEqR‚Ä≤ (PE.cong (Œª x ‚Üí wk (lift œÅ) x [ _ ])
  --                                                    (PE.sym G‚ÇÅ‚â°G‚Ä≤))
  --                                           ([G] [œÅ] ‚ä¢Œî [a])
  --                                           ([G‚â°G‚Ä≤] [œÅ] ‚ä¢Œî [a])
  --              in  convEqTerm‚ÇÇ ([G] [œÅ] ‚ä¢Œî [a]) ([G]‚ÇÅ [œÅ] ‚ä¢Œî [a]‚ÇÅ)
  --                              [G‚â°G‚ÇÅ] ([t‚â°u] [œÅ] ‚ä¢Œî [a]‚ÇÅ))
  convEqTermT‚ÇÇ {Œì = Œì} {lŒµ = lŒµ} (B·µ• BŒ£ (B·µ£ F G D ‚ä¢F ‚ä¢G A‚â°A [F‚Çô] [F] [G] G-ext)
                                        (B·µ£ F‚ÇÅ G‚ÇÅ D‚ÇÅ ‚ä¢F‚ÇÅ ‚ä¢G‚ÇÅ A‚â°A‚ÇÅ [F‚Çô]‚ÇÅ [F]‚ÇÅ [G]‚ÇÅ G-ext‚ÇÅ))
                                        [A‚â°B]@(B‚Çå F‚Ä≤ G‚Ä≤ D‚Ä≤ A‚â°B [F‚â°F‚Çô] [F‚â°F‚Ä≤] [G‚â°G‚Ä≤])
               (Œ£‚Çú‚Çå p r d d‚Ä≤ pProd rProd p‚âÖr [t] [u] N [prop‚â°]) =
    let [A] = B·µ£‚Ä≤ BŒ£ F G D ‚ä¢F ‚ä¢G A‚â°A [F‚Çô] [F] [G] G-ext
        [B] = B·µ£‚Ä≤ BŒ£ F‚ÇÅ G‚ÇÅ D‚ÇÅ ‚ä¢F‚ÇÅ ‚ä¢G‚ÇÅ A‚â°A‚ÇÅ [F‚Çô]‚ÇÅ [F]‚ÇÅ [G]‚ÇÅ G-ext‚ÇÅ
        Œ£F‚ÇÅG‚ÇÅ‚â°Œ£F‚Ä≤G‚Ä≤ = whrDet* (red D‚ÇÅ , Œ£‚Çô) (D‚Ä≤ , Œ£‚Çô)
        F‚ÇÅ‚â°F‚Ä≤ , G‚ÇÅ‚â°G‚Ä≤ = B-PE-injectivity BŒ£ Œ£F‚ÇÅG‚ÇÅ‚â°Œ£F‚Ä≤G‚Ä≤
        Œ£FG‚â°Œ£F‚ÇÅG‚ÇÅ = PE.subst (Œª x ‚Üí Œì  / lŒµ ‚ä¢ Œ£ F ‚ñπ G ‚â° x)
                             (PE.sym Œ£F‚ÇÅG‚ÇÅ‚â°Œ£F‚Ä≤G‚Ä≤) (‚âÖ-eq A‚â°B)
        ‚ä¢Œì = wf ‚ä¢F
        ‚ä¢Œì‚ÇÅ = wf ‚ä¢F‚ÇÅ
        Nmax = max N (max [F‚â°F‚Çô] [F‚Çô]‚ÇÅ)
    in Œ£‚Çú‚Çå p r (convRed:*: d (sym Œ£FG‚â°Œ£F‚ÇÅG‚ÇÅ)) (convRed:*: d‚Ä≤ (sym Œ£FG‚â°Œ£F‚ÇÅG‚ÇÅ)) pProd rProd (‚âÖ-conv p‚âÖr (sym Œ£FG‚â°Œ£F‚ÇÅG‚ÇÅ))
          (convTerm‚ÇÇ [A] [B] [A‚â°B] [t]) (convTerm‚ÇÇ [A] [B] [A‚â°B] [u])
          Nmax
       Œª ‚â§Œµ lŒµ' N<s N<s' ‚Üí
         let F‚Çô<s = ‚â§-trans (‚â§-trans (MaxLess-r _ _) (MaxLess-r N _)) N<s'
             F‚â°F‚Çô<s = ‚â§-trans (‚â§-trans (MaxLess-l _ _) (MaxLess-r N _)) N<s'
             F‚â°F‚ÇÅ = PE.subst (Œª x ‚Üí Œì / lŒµ' ‚ä©‚ü® _ ‚ü© wk id F ‚â° wk id x / [F] Wk.id ‚â§Œµ lŒµ' N<s (Con‚â§ ‚â§Œµ ‚ä¢Œì))
                             (PE.sym F‚ÇÅ‚â°F‚Ä≤)
                             ([F‚â°F‚Ä≤] Wk.id ‚â§Œµ lŒµ' N<s F‚â°F‚Çô<s (Con‚â§ ‚â§Œµ ‚ä¢Œì))
             ([fstp] , [fstr] , [fst‚â°] , K , [snd‚â°]) = [prop‚â°] ‚â§Œµ lŒµ' F‚Çô<s (‚â§-trans (MaxLess-l _ _) N<s')
             [fstp]‚ÇÅ = convTerm‚ÇÇ ([F] Wk.id ‚â§Œµ lŒµ' N<s (Con‚â§ ‚â§Œµ ‚ä¢Œì))
                                 ([F]‚ÇÅ Wk.id ‚â§Œµ lŒµ' F‚Çô<s (Con‚â§ ‚â§Œµ (wf ‚ä¢F‚ÇÅ))) F‚â°F‚ÇÅ [fstp]
             [fstr]‚ÇÅ = convTerm‚ÇÇ ([F] Wk.id ‚â§Œµ lŒµ' N<s (Con‚â§ ‚â§Œµ ‚ä¢Œì))
                                 ([F]‚ÇÅ Wk.id ‚â§Œµ lŒµ' F‚Çô<s (Con‚â§ ‚â§Œµ (wf ‚ä¢F‚ÇÅ))) F‚â°F‚ÇÅ [fstr]
             [fst‚â°]‚ÇÅ = convEqTerm‚ÇÇ ([F] Wk.id ‚â§Œµ lŒµ' N<s (Con‚â§ ‚â§Œµ ‚ä¢Œì))
                                   ([F]‚ÇÅ Wk.id ‚â§Œµ lŒµ' F‚Çô<s (Con‚â§ ‚â§Œµ (wf ‚ä¢F‚ÇÅ))) F‚â°F‚ÇÅ [fst‚â°]
             (M , [[G]]) = [G] Wk.id ‚â§Œµ lŒµ' N<s (Con‚â§ ‚â§Œµ ‚ä¢Œì) [fstp]‚ÇÅ
             (M' , [[G]]‚ÇÅ) = [G]‚ÇÅ Wk.id ‚â§Œµ lŒµ' F‚Çô<s (Con‚â§ ‚â§Œµ (wf ‚ä¢F‚ÇÅ)) [fstp]
             (M'' , [G‚â°Ga]) = [G‚â°G‚Ä≤] Wk.id ‚â§Œµ lŒµ' N<s F‚â°F‚Çô<s (Con‚â§ ‚â§Œµ ‚ä¢Œì) [fstp]‚ÇÅ
             Kmax = max K (max M' M'')
         in [fstp]‚ÇÅ , [fstr]‚ÇÅ , [fst‚â°]‚ÇÅ , Kmax , Œª ‚â§Œµ' lŒµ'' M<s K<s ‚Üí
           let M<s' = ‚â§-trans (‚â§-trans (MaxLess-l _ _) (MaxLess-r K _)) K<s
               M<s'' = ‚â§-trans (‚â§-trans (MaxLess-r _ _)(MaxLess-r K _)) K<s
               G‚â°G‚ÇÅ = PE.subst (Œª x ‚Üí Œì / lŒµ'' ‚ä©‚ü® _ ‚ü© wk (lift id) G [ fst p ] ‚â° wk (lift id) x [ fst p ] / [[G]] ‚â§Œµ' lŒµ'' M<s)
                               (PE.sym G‚ÇÅ‚â°G‚Ä≤) ([G‚â°Ga] ‚â§Œµ' lŒµ'' M<s M<s'')
               [[snd‚â°]] = [snd‚â°] ‚â§Œµ' lŒµ'' M<s' (‚â§-trans (MaxLess-l _ _) K<s)
           in convEqTerm‚ÇÇ ([[G]] ‚â§Œµ' lŒµ'' M<s) ([[G]]‚ÇÅ ‚â§Œµ' lŒµ'' M<s') G‚â°G‚ÇÅ [[snd‚â°]]
     
  --       F‚â°F‚ÇÅ = PE.subst (Œª x ‚Üí Œì / lŒµ ‚ä©‚ü® _ ‚ü© wk id F ‚â° wk id x / [F] Wk.id ‚ä¢Œì)
  --                       (PE.sym F‚ÇÅ‚â°F‚Ä≤)
  --                       ([F‚â°F‚Ä≤] Wk.id ‚ä¢Œì)
  --       [fstp] = convTerm‚ÇÇ ([F] Wk.id ‚ä¢Œì) ([F]‚ÇÅ Wk.id ‚ä¢Œì‚ÇÅ) F‚â°F‚ÇÅ [fstp]‚ÇÅ
  --       [fstr] = convTerm‚ÇÇ ([F] Wk.id ‚ä¢Œì) ([F]‚ÇÅ Wk.id ‚ä¢Œì‚ÇÅ) F‚â°F‚ÇÅ [fstr]‚ÇÅ
  --       [fst‚â°] = convEqTerm‚ÇÇ ([F] Wk.id ‚ä¢Œì) ([F]‚ÇÅ Wk.id ‚ä¢Œì‚ÇÅ) F‚â°F‚ÇÅ [fst‚â°]‚ÇÅ
  --       G‚â°G‚ÇÅ = PE.subst (Œª x ‚Üí Œì / lŒµ ‚ä©‚ü® _ ‚ü© wk (lift id) G [ fst p ] ‚â° wk (lift id) x [ fst p ] / [G] Wk.id ‚ä¢Œì [fstp])
  --                       (PE.sym G‚ÇÅ‚â°G‚Ä≤)
  --                       ([G‚â°G‚Ä≤] Wk.id ‚ä¢Œì [fstp])
  --       [snd‚â°] = convEqTerm‚ÇÇ ([G] Wk.id ‚ä¢Œì [fstp]) ([G]‚ÇÅ Wk.id ‚ä¢Œì‚ÇÅ [fstp]‚ÇÅ) G‚â°G‚ÇÅ [snd‚â°]‚ÇÅ
  --   in  Œ£‚Çú‚Çå p r (convRed:*: d (sym Œ£FG‚â°Œ£F‚ÇÅG‚ÇÅ)) (convRed:*: d‚Ä≤ (sym Œ£FG‚â°Œ£F‚ÇÅG‚ÇÅ))
  --           funcF funcG (‚âÖ-conv t‚â°u (sym Œ£FG‚â°Œ£F‚ÇÅG‚ÇÅ))
  --           (convTerm‚ÇÇ [A] [B] [A‚â°B] [t]) (convTerm‚ÇÇ [A] [B] [A‚â°B] [u])
  --           [fstp] [fstr] [fst‚â°] [snd‚â°]
  convEqTermT‚ÇÇ (U·µ• (U·µ£ .‚Å∞ 0<1 ‚ä¢Œì) (U·µ£ .‚Å∞ 0<1 ‚ä¢Œì‚ÇÅ)) A‚â°B t‚â°u = t‚â°u
  convEqTermT‚ÇÇ (emb‚Å∞¬π x) A‚â°B t‚â°u = convEqTermT‚ÇÇ x A‚â°B t‚â°u
  convEqTermT‚ÇÇ (emb¬π‚Å∞ x) A‚â°B t‚â°u = convEqTermT‚ÇÇ x A‚â°B t‚â°u

  -- Conversion of term equality converting from left to right.
  convEqTerm‚ÇÅ : ‚àÄ {k k‚Ä≤ A B t u} ([A] : Œì / lŒµ ‚ä©‚ü® k ‚ü© A) ([B] : Œì / lŒµ ‚ä©‚ü® k‚Ä≤ ‚ü© B)
              ‚Üí Œì / lŒµ ‚ä©‚ü® k ‚ü©  A ‚â° B / [A]
              ‚Üí Œì / lŒµ ‚ä©‚ü® k ‚ü©  t ‚â° u ‚à∑ A / [A]
              ‚Üí Œì / lŒµ ‚ä©‚ü® k‚Ä≤ ‚ü© t ‚â° u ‚à∑ B / [B]
  convEqTerm‚ÇÅ [A] [B] A‚â°B t‚â°u = convEqTermT‚ÇÅ (goodCases [A] [B] A‚â°B) A‚â°B t‚â°u

  -- Conversion of term equality converting from right to left.
  convEqTerm‚ÇÇ : ‚àÄ {k k‚Ä≤ A B t u} ([A] : Œì / lŒµ ‚ä©‚ü® k ‚ü© A) ([B] : Œì / lŒµ ‚ä©‚ü® k‚Ä≤ ‚ü© B)
            ‚Üí Œì / lŒµ ‚ä©‚ü® k ‚ü©  A ‚â° B / [A]
            ‚Üí Œì / lŒµ ‚ä©‚ü® k‚Ä≤ ‚ü© t ‚â° u ‚à∑ B / [B]
            ‚Üí Œì / lŒµ ‚ä©‚ü® k ‚ü©  t ‚â° u ‚à∑ A / [A]
  convEqTerm‚ÇÇ [A] [B] A‚â°B t‚â°u = convEqTermT‚ÇÇ (goodCases [A] [B] A‚â°B) A‚â°B t‚â°u


-- Weak conversion of term equality converting from left to right.
convTerm‚ÇÅ ∑ : ‚àÄ {k k‚Ä≤ A B t} ([A] : Œì / lŒµ ‚ä©‚ü® k ‚ü© ∑ A) ([B] : Œì / lŒµ ‚ä©‚ü® k‚Ä≤ ‚ü© ∑ B)
            ‚Üí Œì / lŒµ ‚ä©‚ü® k ‚ü© ∑  A ‚â° B / [A]
            ‚Üí Œì / lŒµ ‚ä©‚ü® k ‚ü© ∑  t ‚à∑ A / [A]
            ‚Üí Œì / lŒµ ‚ä©‚ü® k‚Ä≤ ‚ü© ∑ t ‚à∑ B / [B]
convTerm‚ÇÅ ∑ (N , [A]) (M , [B]) (L , A‚â°B) (K , t) =
  max N (max L K) , Œª ‚â§Œµ lŒµ' M<s K<s ‚Üí
    convTerm‚ÇÅ ([A] ‚â§Œµ lŒµ' (‚â§-trans (MaxLess-l _ _) K<s))
              ([B] ‚â§Œµ lŒµ' M<s)
              (A‚â°B ‚â§Œµ lŒµ' (‚â§-trans (MaxLess-l _ _) K<s) (‚â§-trans (‚â§-trans (MaxLess-l L K) (MaxLess-r N _)) K<s))
              (t ‚â§Œµ lŒµ' (‚â§-trans (MaxLess-l _ _) K<s) (‚â§-trans (‚â§-trans (MaxLess-r L K) (MaxLess-r N _)) K<s))
                                                                       
-- Weak conversion of term equality converting from right to left.
convTerm‚ÇÇ ∑ : ‚àÄ {k k‚Ä≤ A B t} ([A] : Œì / lŒµ ‚ä©‚ü® k ‚ü© ∑ A) ([B] : Œì / lŒµ ‚ä©‚ü® k‚Ä≤ ‚ü© ∑ B)
             ‚Üí Œì / lŒµ ‚ä©‚ü® k ‚ü© ∑  A ‚â° B / [A]
             ‚Üí Œì / lŒµ ‚ä©‚ü® k‚Ä≤ ‚ü© ∑ t ‚à∑ B / [B]
             ‚Üí Œì / lŒµ ‚ä©‚ü® k ‚ü© ∑  t ‚à∑ A / [A]
convTerm‚ÇÇ ∑ (N , [A]) (M , [B]) (L , A‚â°B) (K , t) =
  max M (max L K) , Œª ‚â§Œµ lŒµ' N<s K<s ‚Üí
    convTerm‚ÇÇ ([A] ‚â§Œµ lŒµ' N<s)
              ([B] ‚â§Œµ lŒµ' (‚â§-trans (MaxLess-l _ _) K<s))
              (A‚â°B ‚â§Œµ lŒµ' N<s (‚â§-trans (‚â§-trans (MaxLess-l L K) (MaxLess-r M _)) K<s))
              (t ‚â§Œµ lŒµ' (‚â§-trans (MaxLess-l _ _) K<s) (‚â§-trans (‚â§-trans (MaxLess-r L K) (MaxLess-r M _)) K<s))


-- Weak conversion of term equality converting from left to right.
convEqTerm‚ÇÅ ∑ : ‚àÄ {k k‚Ä≤ A B t u} ([A] : Œì / lŒµ ‚ä©‚ü® k ‚ü© ∑ A) ([B] : Œì / lŒµ ‚ä©‚ü® k‚Ä≤ ‚ü© ∑ B)
            ‚Üí Œì / lŒµ ‚ä©‚ü® k ‚ü© ∑  A ‚â° B / [A]
            ‚Üí Œì / lŒµ ‚ä©‚ü® k ‚ü© ∑  t ‚â° u ‚à∑ A / [A]
            ‚Üí Œì / lŒµ ‚ä©‚ü® k‚Ä≤ ‚ü© ∑ t ‚â° u ‚à∑ B / [B]
convEqTerm‚ÇÅ ∑ (N , [A]) (M , [B]) (L , A‚â°B) (K , t‚â°u) =
  max N (max L K) , Œª ‚â§Œµ lŒµ' M<s K<s ‚Üí
    convEqTerm‚ÇÅ ([A] ‚â§Œµ lŒµ' (‚â§-trans (MaxLess-l _ _) K<s))
                ([B] ‚â§Œµ lŒµ' M<s)
                (A‚â°B ‚â§Œµ lŒµ' (‚â§-trans (MaxLess-l _ _) K<s) (‚â§-trans (‚â§-trans (MaxLess-l L K) (MaxLess-r N _)) K<s))
                (t‚â°u ‚â§Œµ lŒµ' (‚â§-trans (MaxLess-l _ _) K<s) (‚â§-trans (‚â§-trans (MaxLess-r L K) (MaxLess-r N _)) K<s))
                                                                       
-- Weak conversion of term equality converting from right to left.
convEqTerm‚ÇÇ ∑ : ‚àÄ {k k‚Ä≤ A B t u} ([A] : Œì / lŒµ ‚ä©‚ü® k ‚ü© ∑ A) ([B] : Œì / lŒµ ‚ä©‚ü® k‚Ä≤ ‚ü© ∑ B)
             ‚Üí Œì / lŒµ ‚ä©‚ü® k ‚ü© ∑  A ‚â° B / [A]
             ‚Üí Œì / lŒµ ‚ä©‚ü® k‚Ä≤ ‚ü© ∑ t ‚â° u ‚à∑ B / [B]
             ‚Üí Œì / lŒµ ‚ä©‚ü® k ‚ü© ∑  t ‚â° u ‚à∑ A / [A]
convEqTerm‚ÇÇ ∑ (N , [A]) (M , [B]) (L , A‚â°B) (K , t‚â°u) =
  max M (max L K) , Œª ‚â§Œµ lŒµ' N<s K<s ‚Üí
    convEqTerm‚ÇÇ ([A] ‚â§Œµ lŒµ' N<s)
                ([B] ‚â§Œµ lŒµ' (‚â§-trans (MaxLess-l _ _) K<s))
                (A‚â°B ‚â§Œµ lŒµ' N<s (‚â§-trans (‚â§-trans (MaxLess-l L K) (MaxLess-r M _)) K<s))
                (t‚â°u ‚â§Œµ lŒµ' (‚â§-trans (MaxLess-l _ _) K<s) (‚â§-trans (‚â§-trans (MaxLess-r L K) (MaxLess-r M _)) K<s))
